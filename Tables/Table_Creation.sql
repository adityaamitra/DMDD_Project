BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE ATTENDEE CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EVENT CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EVENT_REVIEW CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EVENT_SCHEDULE CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE ORGANIZER CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE PAYMENT CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE REGISTRATION CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE SPONSOR CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE EVENT_USERS CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE USER_ADDRESS CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE VENUE CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/


CREATE   TABLE ATTENDEE 
    ( 
     ATTENDEE_ID  NUMBER  NOT NULL , 
     FIRST_NAME   VARCHAR2 (20)  NOT NULL , 
     LAST_NAME    VARCHAR2 (20)  NOT NULL , 
     USER_USER_ID NUMBER  NOT NULL 
    ) 
;

ALTER TABLE ATTENDEE 
    ADD CONSTRAINT ATTENDEE_PK PRIMARY KEY ( ATTENDEE_ID ) ;

CREATE   TABLE EVENT 
    ( 
     EVENT_ID               NUMBER  NOT NULL , 
     ORGANIZER_ORGANIZER_ID NUMBER  NOT NULL , 
     EVENT_NAME             VARCHAR2 (100 CHAR)  NOT NULL , 
     EVENT_DESCRIPTION      VARCHAR2 (100 CHAR) , 
     EVENT_TYPE             VARCHAR2 (50 CHAR)  NOT NULL , 
     STATUS                 VARCHAR2 (50)  NOT NULL , 
     EVENT_BUDGET           NUMBER (10,2) 
    ) 
;

ALTER TABLE EVENT 
    ADD CONSTRAINT EVENT_PK PRIMARY KEY ( EVENT_ID ) ;

CREATE   TABLE EVENT_REVIEW 
    ( 
     FEEDBACK_ID                  NUMBER  NOT NULL , 
     REGISTRATION_REGISTRATION_ID NUMBER  NOT NULL , 
     EVENT_EVENT_ID               NUMBER  NOT NULL , 
     REVIEW                       VARCHAR2 (250 CHAR)  NOT NULL , 
     RATING                       NUMBER  NOT NULL 
    ) 
;

ALTER TABLE EVENT_REVIEW 
    ADD CONSTRAINT EVENT_REVIEW_PK PRIMARY KEY ( FEEDBACK_ID, REGISTRATION_REGISTRATION_ID ) ;

CREATE   TABLE EVENT_SCHEDULE 
    ( 
     SCHEDULE_ID         NUMBER  NOT NULL , 
     EVENT_SCHEDULE_DATE TIMESTAMP  NOT NULL , 
     START_TIME          TIMESTAMP  NOT NULL , 
     END_TIME            TIMESTAMP  NOT NULL , 
     VENUE_VENUE_ID      NUMBER  NOT NULL , 
     EVENT_EVENT_ID      NUMBER  NOT NULL 
    ) 
;

ALTER TABLE EVENT_SCHEDULE 
    ADD CONSTRAINT EVENT_SCHEDULE_PK PRIMARY KEY ( SCHEDULE_ID ) ;

CREATE   TABLE ORGANIZER 
    ( 
     ORGANIZER_ID NUMBER  NOT NULL , 
     USER_USER_ID NUMBER  NOT NULL , 
     COMPANY_NAME VARCHAR2 (100 CHAR)  NOT NULL 
    ) 
;

ALTER TABLE ORGANIZER 
    ADD CONSTRAINT ORGANIZER_PK PRIMARY KEY ( ORGANIZER_ID ) ;

CREATE   TABLE PAYMENT 
    ( 
     PAYMENT_ID                   NUMBER  NOT NULL , 
     REGISTRATION_REGISTRATION_ID NUMBER  NOT NULL , 
     AMOUNT                       NUMBER (10,2)  NOT NULL , 
     PAYMENT_METHOD               VARCHAR2 (100)  NOT NULL , 
     PAYMENT_STATUS               VARCHAR2 (50)  NOT NULL , 
     PAYMENT_DATE                 DATE  NOT NULL 
    ) 
;


ALTER TABLE PAYMENT 
    ADD CONSTRAINT PAYMENT_PK PRIMARY KEY ( PAYMENT_ID ) ;

CREATE   TABLE REGISTRATION 
    ( 
     REGISTRATION_ID      NUMBER  NOT NULL , 
     EVENT_EVENT_ID       NUMBER  NOT NULL , 
     ATTENDEE_ATTENDEE_ID NUMBER  NOT NULL , 
     REGISTRATION_DATE    DATE  NOT NULL , 
     STATUS               VARCHAR2 (20 CHAR)  NOT NULL , 
     TICKET_PRICE         NUMBER (10,2)  NOT NULL , 
     QUANTITY             NUMBER  NOT NULL 
    ) 
;

COMMENT ON COLUMN REGISTRATION.STATUS IS 'STATUS OF REGISTRATION EX: CONFIRMED, PENDING, CANCELLED' 
;

ALTER TABLE REGISTRATION 
    ADD CONSTRAINT REGISTRATION_PK PRIMARY KEY ( REGISTRATION_ID ) ;

CREATE   TABLE SPONSOR 
    ( 
     SPONSOR_ID       NUMBER  NOT NULL , 
     SPONSOR_NAME     VARCHAR2 (100 CHAR)  NOT NULL , 
     AMOUNT_SPONSORED NUMBER  NOT NULL , 
     EVENT_EVENT_ID   NUMBER  NOT NULL , 
     USER_USER_ID     NUMBER  NOT NULL 
    ) 
;

ALTER TABLE SPONSOR 
    ADD CONSTRAINT SPONSOR_PK PRIMARY KEY ( SPONSOR_ID, EVENT_EVENT_ID ) ;

CREATE   TABLE EVENT_USERS
    ( 
     USER_ID       NUMBER  NOT NULL , 
     FIRST_NAME    VARCHAR2 (50)  NOT NULL , 
     LAST_NAME     VARCHAR2 (50)  NOT NULL , 
     EMAIL         VARCHAR2 (250)  NOT NULL , 
     PHONE_NUMBER  NUMBER  NOT NULL , 
     USER_PASSWORD VARCHAR2 (250)  NOT NULL , 
     USER_TYPE     VARCHAR2 (15)  NOT NULL 
    ) 
;

ALTER TABLE EVENT_USERS 
    ADD CONSTRAINT USER_PK PRIMARY KEY ( USER_ID ) ;

CREATE   TABLE USER_ADDRESS 
    ( 
     ADDRESS_ID     NUMBER  NOT NULL , 
     USER_USER_ID   NUMBER  NOT NULL , 
     STREET_ADDRESS VARCHAR2 (250)  NOT NULL , 
     CITY           VARCHAR2 (100)  NOT NULL , 
     STATE          VARCHAR2 (100)  NOT NULL , 
     COUNTRY        VARCHAR2 (100)  NOT NULL , 
     ZIP_CODE       NUMBER  NOT NULL , 
     ADDRESS_TYPE   VARCHAR2 (10)  NOT NULL 
    ) 
;

COMMENT ON COLUMN USER_ADDRESS.ADDRESS_TYPE IS 'Ex. Home, Office, etc' 
;

ALTER TABLE USER_ADDRESS 
    ADD CONSTRAINT USER_ADDRESS_PK PRIMARY KEY ( ADDRESS_ID ) ;

CREATE   TABLE VENUE 
    ( 
     VENUE_ID       NUMBER  NOT NULL , 
     VENUE_NAME     VARCHAR2 (100 CHAR)  NOT NULL , 
     VENUE_CAPACITY NUMBER  NOT NULL , 
     USER_USER_ID   NUMBER  NOT NULL 
    ) 
;


ALTER TABLE VENUE 
    ADD CONSTRAINT VENUE_PK PRIMARY KEY ( VENUE_ID ) ;

ALTER TABLE ATTENDEE 
    ADD CONSTRAINT ATTENDEE_USER_FK FOREIGN KEY 
    ( 
     USER_USER_ID
    ) 
    REFERENCES EVENT_USERS 
    ( 
     USER_ID
    ) 
;

ALTER TABLE EVENT 
    ADD CONSTRAINT EVENT_ORGANIZER_FK FOREIGN KEY 
    ( 
     ORGANIZER_ORGANIZER_ID
    ) 
    REFERENCES ORGANIZER 
    ( 
     ORGANIZER_ID
    ) 
;

ALTER TABLE EVENT_REVIEW 
    ADD CONSTRAINT EVENT_REVIEW_EVENT_FK FOREIGN KEY 
    ( 
     EVENT_EVENT_ID
    ) 
    REFERENCES EVENT 
    ( 
     EVENT_ID
    ) 
;

ALTER TABLE EVENT_REVIEW 
    ADD CONSTRAINT EVENT_REVIEW_REGISTRATION_FK FOREIGN KEY 
    ( 
     REGISTRATION_REGISTRATION_ID
    ) 
    REFERENCES REGISTRATION 
    ( 
     REGISTRATION_ID
    ) 
;

ALTER TABLE EVENT_SCHEDULE 
    ADD CONSTRAINT EVENT_SCHEDULE_EVENT_FK FOREIGN KEY 
    ( 
     EVENT_EVENT_ID
    ) 
    REFERENCES EVENT 
    ( 
     EVENT_ID
    ) 
;

ALTER TABLE EVENT_SCHEDULE 
    ADD CONSTRAINT EVENT_SCHEDULE_VENUE_FK FOREIGN KEY 
    ( 
     VENUE_VENUE_ID
    ) 
    REFERENCES VENUE 
    ( 
     VENUE_ID
    ) 
;

ALTER TABLE ORGANIZER 
    ADD CONSTRAINT ORGANIZER_USER_FK FOREIGN KEY 
    ( 
     USER_USER_ID
    ) 
    REFERENCES EVENT_USERS 
    ( 
     USER_ID
    ) 
    ON DELETE CASCADE 
;

ALTER TABLE PAYMENT 
    ADD CONSTRAINT PAYMENT_REGISTRATION_FK FOREIGN KEY 
    ( 
     REGISTRATION_REGISTRATION_ID
    ) 
    REFERENCES REGISTRATION 
    ( 
     REGISTRATION_ID
    ) 
;

ALTER TABLE REGISTRATION 
    ADD CONSTRAINT REGISTRATION_ATTENDEE_FK FOREIGN KEY 
    ( 
     ATTENDEE_ATTENDEE_ID
    ) 
    REFERENCES ATTENDEE 
    ( 
     ATTENDEE_ID
    ) 
;

ALTER TABLE REGISTRATION 
    ADD CONSTRAINT REGISTRATION_EVENT_FK FOREIGN KEY 
    ( 
     EVENT_EVENT_ID
    ) 
    REFERENCES EVENT 
    ( 
     EVENT_ID
    ) 
;

ALTER TABLE SPONSOR 
    ADD CONSTRAINT SPONSOR_EVENT_FK FOREIGN KEY 
    ( 
     EVENT_EVENT_ID
    ) 
    REFERENCES EVENT 
    ( 
     EVENT_ID
    ) 
;

ALTER TABLE SPONSOR 
    ADD CONSTRAINT SPONSOR_USER_FK FOREIGN KEY 
    ( 
     USER_USER_ID
    ) 
    REFERENCES EVENT_USERS 
    ( 
     USER_ID
    ) 
;

ALTER TABLE USER_ADDRESS 
    ADD CONSTRAINT USER_ADDRESS_USER_FK FOREIGN KEY 
    ( 
     USER_USER_ID
    ) 
    REFERENCES EVENT_USERS 
    ( 
     USER_ID
    ) 
    ON DELETE CASCADE 
;

ALTER TABLE VENUE 
    ADD CONSTRAINT VENUE_USER_FK FOREIGN KEY 
    ( 
     USER_USER_ID
    ) 
    REFERENCES EVENT_USERS 
    ( 
     USER_ID
    ) 
;

PURGE RECYCLEBIN;
